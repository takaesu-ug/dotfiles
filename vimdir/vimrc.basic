"ビープ音を消す
set t_vb=
set novisualbell
set noerrorbells
"swap なし
set noswapfile
"チルダ（バックアッップ）ファイルなし
set nobackup
"crontabが編集時に使うtmpディレクトリではバックアップをスキップする
set backupskip=/tmp/*,/private/tmp/*
" .{ファイル名}.un~ ファイルを作成しないようにする refs.http://www.kaoriya.net/blog/2014/03/30/
" set undofile
set noundofile
" 一行の文字数が多くてもきちんと描画(@で省略されないようにする)
set display=lastline

" Visualモードでヤンクしたものをクリップボードにコピー
" http://vim-users.jp/2010/02/hack126/
set clipboard+=autoselect
"set clipboard+=unnamed

" Ctrl-iでヘルプ
nnoremap <C-i>  :<C-u>help<Space>
" Ctrl-i２回押しでカーソル下のキーワードをヘルプでひく
nnoremap <C-i><C-i> :<C-u>help<Space><C-r><C-w><Enter>

" ;でコマンド入力( ;と:を入れ替)
noremap ; :

" Oキーでノーマルモードで改行を入れる http://vim-users.jp/2009/08/hack57/
nnoremap O :<C-u>call append(expand('.'), '')<Cr>j

" j<C-j>でノーマルモードに移行する
inoremap <silent> <C-j> <ESC>

" CTRL-hjklでウィンドウ移動
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
nnoremap <C-h> <C-w>h

" 挿入モードでのカーソル移動(Emacs風に)
inoremap <C-n> <Down>
inoremap <C-p> <Up>
inoremap <C-b> <Left>
inoremap <C-f> <Right>
inoremap <silent> <C-a> <Esc>0<Insert>
inoremap <silent> <C-e><C-e> <Esc>$a

" カーソル前の文字削除
inoremap <silent> <C-h> <C-g>u<C-h>
" カーソル後の文字削除
inoremap <silent> <C-d> <Del>
" カーソルから行頭まで削除
"inoremap <silent> <C-d>e <Esc>lc^ "C-uで利用可能なため
" カーソルから行末まで削除
inoremap <silent> <C-d>0 <Esc>lc$
" カーソルから行頭までヤンク
inoremap <silent> <C-y>e <Esc>ly0<Insert>
" カーソルから行末までヤンク
inoremap <silent> <C-y>0 <Esc>ly$<Insert>

" 行頭・行末移動方向をキーの相対位置にあわせる
nnoremap 0 $
nnoremap 1 0

"カーソルを行頭、行末で止まらないようにする
set whichwrap=b,s,h,l,<,>,[,]

"貼り付け時のコメントが自動で入るのを防止
autocmd FileType * set formatoptions-=ro

"対応するカッコへのカーソル移動を拡張
"http://nanasi.jp/articles/vim/matchit_vim.html
source $VIMRUNTIME/macros/matchit.vim
" let b:match_words = "{:}"   "この設定を入れていると動かない

"ペーストするときにインデントさせない
"[C-y]の設定を一旦クリアしてpastetoggleを[C-y]に割り当てる
"ノーマルモードに移動する時に「set nopaste」を実行する
inoremap <C-y> <nop>
set pastetoggle=<C-y>
autocmd InsertLeave * set nopaste

" :gr(ep) コマンドでptを使って検索できるように -e オプションを使って正規表現も使えるように
" 全角文字を指定する :gr '[^\x01-\x7E]' config/locales/'
" set grepprg=hw\ -e\ --no-group
" set grepprg=pt\ -e\ --nogroup
set grepprg=ag\ --vimgrep\ $*
set grepformat=%f:%l:%m

" grep検索の実行後にQuickFix Listを表示する
" 標準的な使い方  :vim {pattern} {file} | cw
autocmd QuickFixCmdPost *grep* cwindow

" vim内で検索するときに大文字小文字を気にしない（ignore case）する方法 -
" http://qiita.com/shoma2da/items/23009d4e1a90c5fe5c31
" /\choge    <= 検索時に \c をつけるとignorecaseによる検索になる
" /\Choge    <= 検索時に \C をつけるとcase sensitiveによる検索になる
set ignorecase
set smartcase

" 検索時のハイライト
set hlsearch

" マウス操作を有効にする
set mouse=a

" Backspaceのキーを有効にする
set backspace=indent,eol,start

" https://github.com/hamano/locale-eaw
if exists('&ambw')
  set ambw=double
endif

" Macの場合で insertモードから <Esc> <C-c> <C-[> のキーでノーマルモードに移るときに英数に切り替える
" http://qiita.com/creasty/items/30d1f0fc262f7c455d14
if executable('osascript')
  let s:keycode_jis_eisuu = 102
  let g:force_alphanumeric_input_command = "osascript -e 'tell application \"System Events\" to key code " . s:keycode_jis_eisuu . "' &"

  inoremap <silent> <Esc> <Esc>:call system(g:force_alphanumeric_input_command)<CR>
  inoremap <silent> <C-[> <C-[>:call system(g:force_alphanumeric_input_command)<CR>
  inoremap <silent> <C-c> <Esc>:call system(g:force_alphanumeric_input_command)<CR>
else
  " Mac以外の場合はC-cをEscと同じ挙動とする
  " refs http://d.hatena.ne.jp/yuta84q/20101216/1292508997
  inoremap <silent> <C-c> <Esc>
endif
