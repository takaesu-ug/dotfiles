"-------------------------------------------------------------------------------
" 表示 Apperance
"-------------------------------------------------------------------------------
syntax enable         " ハイライトオン
set showmatch         " 括弧の対応をハイライト
set number            " 行番号表示
set list              " 不可視文字表示
set listchars=nbsp:¬,tab:>.,trail:_,extends:>,precedes:< " 不可視文字の表示形式
set display=uhex      " 印字不可能文字を16進数で表示

" 補完候補の色づけ for vim7
highlight PmenuSel cterm=reverse ctermfg=33 ctermbg=222 gui=reverse guifg=#3399ff guibg=#f0e68c

" StatusLine
" http://www.ksknet.net/vi/statusline.html
set laststatus=2
set statusline=%F%r%h%m%=%l/%L:%c%V

" 全角スペースの表示
highlight ZenkakuSpace cterm=underline ctermfg=lightblue guibg=darkgray
match ZenkakuSpace /　/


"" カーソル行をハイライト
" カレントウィンドウにのみ罫線を引く
" augroup cch
"   autocmd! cch
"   autocmd WinLeave * set nocursorline
"   autocmd WinEnter,BufRead * set cursorline
" augroup END
" set nocursorline
" highlight clear CursorLine
" highlight CursorLine gui=underline
" highlight CursorLine ctermbg=black guibg=black

" vimでカーソル位置の行と列を強調表示する - Qiita http://qiita.com/shiena/items/3f51a2c0b4722427e430
" cursorline' を必要な時にだけ有効にする - 永遠に未完成 http://d.hatena.ne.jp/thinca/20090530/1243615055
augroup vimrc-auto-cursorline
  autocmd!
  autocmd CursorMoved,CursorMovedI * call Auto_cursorline('CursorMoved')
  autocmd CursorHold,CursorHoldI * call Auto_cursorline('CursorHold')
  autocmd WinEnter * call Auto_cursorline('WinEnter')
  autocmd WinLeave * call Auto_cursorline('WinLeave')

  let g:cursorline_lock = 0
  function! Auto_cursorline(event)
    if a:event ==# 'WinEnter'
      setlocal cursorline
"      setlocal cursorcolumn
      let g:cursorline_lock = 2
    elseif a:event ==# 'WinLeave'
      setlocal nocursorline
      setlocal nocursorcolumn
    elseif a:event ==# 'CursorMoved'
      if g:cursorline_lock
        if 1 < g:cursorline_lock
          let g:cursorline_lock = 1
        else
          setlocal nocursorline
          setlocal nocursorcolumn
          let g:cursorline_lock = 0
        endif
      endif
    elseif a:event ==# 'CursorHold'
      setlocal cursorline
"      setlocal cursorcolumn
      let g:cursorline_lock = 1
    endif
  endfunction
augroup END

" コマンド実行中は再描画しない
set lazyredraw
" 高速ターミナル接続を行う
set ttyfast

"Escの２回押しで検索のハイライト消去
nmap <ESC><ESC> :nohlsearch<CR><ESC>

"シンタックスハイライト 拡張子に応じてPerlやHtmlを識別する
autocmd BufNewFile,BufRead *.psgi     set filetype=perl
autocmd BufNewFile,BufRead *.t        set filetype=perl
autocmd BufNewFile,BufRead *.mt       set filetype=html
autocmd BufNewFile,BufRead *.tx       set filetype=html
autocmd BufNewFile,BufRead *.html.erb set filetype=eruby.html
autocmd BufNewFile,BufRead *.j2       set filetype=jinja

"タブをスペースで挿入(4スペース)
set expandtab
set tabstop=4
set shiftwidth=4
set softtabstop=0

" 保存時に行末の空白を除去する
autocmd BufWritePre * :%s/\s\+$//ge
"" 保存時にtabをスペースに変換する(4スペース)
" autocmd BufWritePre * :%s/\t/    /ge
