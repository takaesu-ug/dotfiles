"-------------------------------------------------------------------------------
" 表示 Apperance
"-------------------------------------------------------------------------------
syntax enable         " ハイライトオン
set showmatch         " 括弧の対応をハイライト
set number            " 行番号表示
set list              " 不可視文字表示
set listchars=nbsp:¬,tab:>.,trail:_,extends:>,precedes:< " 不可視文字の表示形式
set display=uhex      " 印字不可能文字を16進数で表示
" 特殊文字の表示
highlight SpecialKey cterm=underline ctermfg=237 guibg=darkgray

" 行番号のカラー
highlight LineNr ctermfg=238

" 補完候補の色づけ for vim7
highlight PmenuSel cterm=reverse ctermfg=33 ctermbg=222 gui=reverse guifg=#3399ff guibg=#f0e68c

" StatusLine lightlineを利用するようにしている
" http://www.ksknet.net/vi/statusline.html
set laststatus=2

" 全角スペースの表示
highlight ZenkakuSpace cterm=underline ctermfg=lightblue guibg=darkgray
match ZenkakuSpace /　/

" vimでカーソル位置の行と列を強調表示する - Qiita http://qiita.com/shiena/items/3f51a2c0b4722427e430
" cursorline' を必要な時にだけ有効にする - 永遠に未完成 http://d.hatena.ne.jp/thinca/20090530/1243615055
augroup vimrc-auto-cursorline
  autocmd!
  autocmd CursorMoved,CursorMovedI * call Auto_cursorline('CursorMoved')
  autocmd CursorHold,CursorHoldI * call Auto_cursorline('CursorHold')
  autocmd WinEnter * call Auto_cursorline('WinEnter')
  autocmd WinLeave * call Auto_cursorline('WinLeave')

  let g:cursorline_lock = 0
  function! Auto_cursorline(event)
    if a:event ==# 'WinEnter'
      setlocal cursorline
"      setlocal cursorcolumn
      let g:cursorline_lock = 2
    elseif a:event ==# 'WinLeave'
      setlocal nocursorline
      setlocal nocursorcolumn
    elseif a:event ==# 'CursorMoved'
      if g:cursorline_lock
        if 1 < g:cursorline_lock
          let g:cursorline_lock = 1
        else
          setlocal nocursorline
          setlocal nocursorcolumn
          let g:cursorline_lock = 0
        endif
      endif
    elseif a:event ==# 'CursorHold'
      setlocal cursorline
"      setlocal cursorcolumn
      let g:cursorline_lock = 1
    endif
  endfunction
augroup END

" コマンド実行中は再描画しない
set lazyredraw
" 高速ターミナル接続を行う
set ttyfast

"Escの２回押しで検索のハイライト消去
nmap <ESC><ESC> :nohlsearch<CR><ESC>

" vimに自作コマンドを実装する - Qiita http://qiita.com/shimbaroid/items/f2ad60c203ccdff7da16
" 保存時に行末の空白を除去する
" autocmd BufWritePre * :%s/\s\+$//ge
" :Tailw 行末のwhite space削除
:command! Tailw :%s/\s\+$//ge
"" 保存時にtabをスペースに変換する(2スペース)
" autocmd BufWritePre * :%s/\t/  /ge
:command! Tab2w :%s/\t/  /ge

" 分割時のスクロールを同期しない
set noscb
